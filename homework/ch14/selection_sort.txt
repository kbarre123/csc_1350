Summary of Selection Sort Lecture: 14.1-14.2

int[] list = {5,4,32,6,4,6,5};

a) Trace the action of the selection sort algorithm on
   the list array, showing the contents of the array after
   each pass.
   
   Ans:  pass                            #key comparisons     #swaps
         # 1: 4 | 5 32 6 4 6 5           6                    1 
         # 2: 4 4 | 32 6 5 6 5           5                    1
         # 3: 4 4 5 | 6 32 6 5           4                    1 
         # 4: 4 4 5 5 | 32 6 6           3                    1
         # 5: 4 4 5 5 6 | 32 6           2                    1
         # 6: 4 4 5 5 6 6 | 32           1                    1

b) How many passes are required to sort the array?
   
   Ans: 6 passes		
   
c) How many key-comparisons and swaps are done during the 
   execution of the algorithm?
   
   Ans: 6 swaps and 6(6+1)/2 = 21 key-comparisons
   
d) Suppose this task was performed on a CPU that takes
   6 microseconds to swap data in memory and 3 microseconds
   to compare keys, how long will it take the array to be
   sorted, all things being equal?
   
   Ans: 6 * 6  = 36 microseconds for the swaps
        21 * 3 = 63 microseconds for the comparisons
               = 99 microseconds for the task  
			   
e) Suppose a CPU takes 25 ms to sort a list that has 500 keys. 
   How long will the same CPU take to sort a list that has 750
   keys?

   Ans:  t(n) ~ n^2   for selection sort

       Therefore,    25   ~   (500)^2   
                      t   ~   (750)^2
					
		cross-multiplying, we get:
		(500)^2 t  = 25 * (750)^2
		
        t = 25 * 750 * 750        25*15*15       25*3*3     
            --------------    =   ---------  =  -------  =  225/4 = 56.25 ms
              500 * 500             10*10         2*2
			  

f) How would you sort, using the SelectionSorter class in the book, and print the list array?

   Ans: SelectionSorter.sort(list);
        System.out.println(Arrays.toString(list));