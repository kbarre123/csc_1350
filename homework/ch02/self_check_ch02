CSC 1350
Sec #1
Spring 2014

Chapter 2 
Self Checkout Problems
#1-29, 35-38

1. No, a window and waterheater would not be in the same class. Their physical 
attributes and actions are too different to belong in the same class.
2. No.
3. The variable name has spaces in it, which isn't allowed.
4. See Java program in /CH02/SC04.
5. See above.
6. int & String
7. double
8. yes, yes, no, no, no, no
9. String fullName = "K.C. Barrett";
10. No.
11. See Java program in /CH02/SC11.
12. The parking space #1 exists, but is empty. Assignment would be directing 
someone to park their car in space #1.
13. See Java program in /CH02/SC13.
14. See Java program in /CH02/SC14.
15. No, because println() is a method of the PrintStream class. Also, println() 
takes one argument, of which none are provided here.
16. "p" is the target and "s" is the replacement.
17. See Java program in /CH02/SC13.
18. See Java program in /CH02/SC14.
19. object.toUpper();
20. See Java program in /CH02/SC20.
21. See Java program in /CH02/SC20.
22. See Java program in /CH02/SC20.
23. ??
24. ??
25. See Java program in /CH02/SC20.
26. See Java program in /CH02/SC20.
27. It prints "HELLO" then "Hello". The reason is, .toUpperCase method isn't
permanent.
28. It's a mutator, but isn't permanent.
29. See Java program in /CH02/SC20.
35. See Java program in /CH02/SC35.
36. Because we're not augmenting the width/height, just the origin of the box.
37.
38.


R2.1: 
Q: Difference b/t an object and a class?
A: A class construct that describes attributes and actions of a group of similar objects that share those attributes and actions. An object is an instance of a class from which it inherits its attributes and actions.

R2.2: 
Q: What is public interface of a class? How is it different from implementation?
A: The public interface of a class are those methods made available for use (i.e. the .println() method of the PrintStream class). Conversely, the private implementation describes the data inside its objects and the instructions for its methods.

R2.3: See Java program in /ch02/R2_03.

R2.4: See Java program in /ch02/R2_04.

R2.5: mystery is declared twice, which isn't allowed.

R2.6:
Q: Explain the difference b/t the '=' symbol in Java and in mathematics.
A: In Java, the '=' symbol assigns a value to a variable. In mathematics, it is a declarative statement noting that two things are equal. It doesn't assign the value, it simply states a fact. It is passive in mathematics and active in Java.

R2.19:
Q: Explain the difference b/t an object and an object reference.
A: An object is an object, where an object reference is a reference to where the object is stored in memory. It's memory footprint
is much smaller and doesn't require large objects to be copied numerous times. When the referenced object changes however, the object-
reference continues to point to the now-changed object.
